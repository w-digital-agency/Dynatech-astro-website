---
interface Props {
  currentPage: string;
}

const { currentPage } = Astro.props;
const segments = Astro.url.pathname.split('/').filter(Boolean);
---

<nav aria-label="Breadcrumb" class="breadcrumb">
  <ol>
    <li>
      <a href="/">Home</a>
      <span class="separator">/</span>
    </li>
    {segments.map((segment, index) => {
      const isLast = index === segments.length - 1;
      const path = `/${segments.slice(0, index + 1).join('/')}`;
      const label = segment.charAt(0).toUpperCase() + segment.slice(1);
      
      return (
        <li>
          {isLast ? (
            <span class="current">{label}</span>
          ) : (
            <>
              <a href={path}>{label}</a>
              <span class="separator">/</span>
            </>
          )}
        </li>
      );
    })}
  </ol>
</nav>

<style>
  .breadcrumb {
    padding: 1em;
    background: white;
    border-bottom: 1px solid rgb(var(--gray-light));
  }

  .breadcrumb ol {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5em;
  }

  .breadcrumb li {
    display: flex;
    align-items: center;
    gap: 0.5em;
    color: rgb(var(--gray));
  }

  .breadcrumb a {
    color: var(--accent);
    text-decoration: none;
  }

  .breadcrumb a:hover {
    text-decoration: underline;
  }

  .breadcrumb .current {
    color: rgb(var(--gray-dark));
    font-weight: 500;
  }

  .separator {
    color: rgb(var(--gray-light));
  }

  @media (max-width: 720px) {
    .breadcrumb {
      padding: 0.5em 1em;
      font-size: 0.9em;
    }
  }
</style>